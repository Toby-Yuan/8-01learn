select語法

// 選擇使用northwind這個資料庫(database)
USE northwind

// 從products資料表(table)選擇全部欄位，*表示全部欄位
SELECT * FROM products

// 可以選擇指定欄位
SELECT ProductID, ProductName FROM products

// WHERE可以篩選出指定欄位的值(篩選條件可以是比較值)
SELECT ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
FROM products
WHERE UnitsInStock < ReorderLevel;

// WHERE篩選條件裡面可以做數值的相加
SELECT ProductID, ProductName, UnitPrice, UnitsInStock,UnitsOnOrder, ReorderLevel
FROM products
WHERE ( UnitsInStock + UnitsOnOrder ) < ReorderLevel;

// LIKE可以篩選出類似的值，％表示任意長度的字串
SELECT * FROM products
WHERE ProductName LIKE 'c%'

--> 大小寫區分 : LIKE BINARY

// WHERE的篩選條件裡面可以有邏輯運算元，要注意()的順序問題
SELECT ProductID, ProductName, UnitPrice, UnitsInStock,UnitsOnOrder, ReorderLevel
FROM products
WHERE UnitPrice <= 10 or UnitPrice >= 20;

SELECT ProductID, ProductName, UnitPrice, UnitsInStock,UnitsOnOrder, ReorderLevel
FROM products
WHERE not ( UnitPrice <= 10 or UnitPrice >= 20 );

--> UnitPrice > 10 and UnitPrice < 20;

// 區間型條件
SELECT ProductID, ProductName, UnitPrice, UnitsInStock,UnitsOnOrder, ReorderLevel
FROM products
WHERE UnitPrice >= 10 and UnitPrice <= 20;

--> UnitPrice BETWEEN 10 AND 20;

// 列舉型條件
SELECT *
FROM products
WHERE CategoryID IN (1, 4, 8);

// ORDER BY : 排序
SELECT *
FROM products
ORDER BY SupplierID

// NULL : 空白值?? 不知道?? 0??
SELECT companyname, fax
FROM suppliers
WHERE fax IS NULL;

// DISTINCT : 重複的只留一筆
SELECT DISTINCT country
FROM suppliers
ORDER BY country;

// AS : 變更欄位名稱 (list_name) AS (new_list_name)，是更換結果不是過程！！！
SELECT ProductID AS `產品編號`
FROM products;

--> SELECT ProductID `產品名稱`

// CONCAT : 字串相連(數字要經過轉換)
SELECT FirstName, LastName, 
CONCAT('Identification number:', CONVERT(EmployeeID,varchar(2)) ) AS ID
FROM employees;

// LIMIT int : 依照排序取前面幾筆，LIMIT int(a), int(b) : 跳過a筆取b筆
// DESC : 從大到小排列
SELECT ProductID, ProductName, UnitPrice
FROM products
ORDER BY UnitPrice DESC
limit 3;


// 子查詢Subquery
    在query中的query

// 例子 :
SELECT * FROM orders
WHERE OrderDate = 
    (SELECT MAX(OrderDate) FROM orders);

// 課堂範例題目：美商供應的產品清單
-- 起
SELECT * FROM products

-- 承
SELECT ProductID, ProductName,UnitPrice FROM products
WHERE ???
--> 主要目標不是在這個資料表

-- 轉
SELECT * FROM suppliers WHERE country = 'USA'
--> 供應商資料在suppliers資料夾

-- 合
SELECT ProductID, ProductName,UnitPrice FROM products
WHERE SupplierID in (2, 3, 16, 19)

--> 合併，但是太多了
SELECT ProductID, ProductName,UnitPrice FROM products
WHERE SupplierID in (SELECT * FROM suppliers WHERE country = 'USA')

--> 縮減成一欄
SELECT ProductID, ProductName,UnitPrice FROM products
WHERE SupplierID in 
    (SELECT SupplierID FROM suppliers WHERE country = 'USA')

// AVG : 平均函數
SELECT AVG(UnitPrice) FROM products;

// 產生一個表格有產品編號，產品名稱，價格以及價差(價格-平均價格)
-- 起 
SELECT * FROM products

-- 承
SELECT ProductID, ProductName,UnitPrice, AvgPrice??? FROM products
--> 沒有平均價格

-- 轉
SELECT AVG(UnitPrice) FROM products;

-- 合
SELECT ProductID, ProductName,UnitPrice, 
    28.87 AS AvgPrice
FROM products

--> 算價差
SELECT ProductID, ProductName,UnitPrice, 
    UnitPrice - 28.87 AS DiffPrice
FROM products

--> 正式的合併！！
SELECT ProductID, ProductName,UnitPrice, 
    UnitPrice - (SELECT AVG(UnitPrice) FROM products) AS DiffPrice
FROM products

--> 四捨五入到小數點第二位 : ROUND(x,2)
SELECT ProductID, ProductName,UnitPrice, 
    ROUND(UnitPrice - (SELECT AVG(UnitPrice) FROM products) , 2) AS DiffPrice
FROM products

// 變成針對各商品類別(先只看第一大類)
-- 起 
SELECT * FROM products

-- 承
SELECT ProductID, ProductName, CategoryID, UnitPrice, AvgPrice??? FROM products
--> 沒有平均價格，而且要各個類別的

-- 轉
SELECT AVG(UnitPrice) FROM products WHERE CategoryID = 1;

-- 合
SELECT ProductID, ProductName, CategoryID, UnitPrice, 
    UnitPrice - (SELECT AVG(UnitPrice) FROM products WHERE CategoryID = 1) AS DiffPrice
FROM products

--> 針對各類別
1.
SELECT ProductID, ProductName, CategoryID, (p.CategoryID), UnitPrice, 
    UnitPrice - (SELECT AVG(UnitPrice) FROM products WHERE CategoryID = 1) AS DiffPrice
FROM products AS p

2. 讓自己接受 SELECT p.CategoryID
SELECT ProductID, ProductName, CategoryID, (SELECT p.CategoryID), UnitPrice, 
    UnitPrice - (SELECT AVG(UnitPrice) FROM products WHERE CategoryID = 1) AS DiffPrice
FROM products AS p

3. 替換1
SELECT ProductID, ProductName, CategoryID, (SELECT p.CategoryID), UnitPrice,
    (SELECT AVG(UnitPrice) FROM products WHERE CategoryID = (SELECT p.CategoryID)) AS AvgPrice,
    UnitPrice - (SELECT AVG(UnitPrice) FROM products WHERE CategoryID = (SELECT p.CategoryID)) AS DiffPrice
FROM products AS p
